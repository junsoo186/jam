<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.repository.interfaces.BookRepository">

	<insert id="insertBook">
		insert into book_tb (user_id, title,
		author_comment, serial_day, author, category_id, genre_id, introduction,
		age)
		VALUES (#{userId}, #{title},
		#{authorComment}, #{serialDay},#{author},
		#{categoryId}, #{genreId}, #{introduction},
		#{age});
	</insert>

	<insert id="insertBookTags">
		<foreach item="tagId" collection="tagIds" separator=",">
			INSERT
			INTO book_tag_tb (book_id, tag_id)
			VALUES (#{bookId}, #{tagId});
		</foreach>
	</insert>

	<select id="AllBookList"
		resultType="com.jam.repository.model.Book">
		select *
		from book_tb
	</select>

	<select id="AllBookListByUserId"
		resultType="com.jam.repository.model.Book">
		SELECT
		b.title,
		b.author,
		b.likes,
		GROUP_CONCAT(DISTINCT
		g.genre_name ORDER BY g.genre_name ASC) AS genres,
		GROUP_CONCAT(DISTINCT c.category_name ORDER BY c.category_name ASC) AS
		categories,
		GROUP_CONCAT(DISTINCT t.tag_name ORDER BY t.tag_name ASC)
		AS tags
		FROM
		book_tb b
		LEFT JOIN
		book_genre_tb bg ON b.book_id =
		bg.book_id
		LEFT JOIN
		genre_tb g ON bg.genre_id = g.genre_id
		LEFT JOIN
		book_category_tb bc ON b.book_id = bc.book_id
		LEFT JOIN
		category_tb c ON
		bc.category_id = c.category_id
		LEFT JOIN
		book_tag_tb bt ON b.book_id =
		bt.book_id
		LEFT JOIN
		tag_tb t ON bt.tag_id = t.tag_id
		WHERE
		b.user_id =
		#{userId}
		GROUP BY
		b.book_id, b.title, b.author, b.likes
		ORDER BY
		b.title
		ASC;
	</select>

	<select id="detailBookByBookId"
		resultType="com.jam.repository.model.Book">
		select title, author, author_comment, introduction,
		book_cover_image, serial_day, likes,
		age, created_at
		from book_tb
		where
		book_id = #{bookId};
	</select>

	<update id="updateBook">
		UPDATE book_tb
		SET
		title = #{title},
		author_comment =
		#{authorComment},
		introduction = #{introduction},
		serial_day =
		#{serialDay},
		age = #{age}
		WHERE
		book_id = #{bookId};
	</update>

	<update id="bookViewCountUp">
		update book_tb set
		SET view = view + 1
		where book_id =
		#{bookId}
	</update>

	<delete id="deleteBook">
		delete book_tb where book_id = #{bookId}
	</delete>

	<select id="findTagName">
		select * from tag_tb where tag_name = #{tagNames};
	</select>
</mapper>