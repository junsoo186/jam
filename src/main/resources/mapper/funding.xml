<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.jam.repository.interfaces.FundingRepository">

	<insert id="insertFunding"
		parameterType="com.jam.dto.FundingDTO"> INSERT INTO funding_tb (
		user_id, reward_id, created_at,
		canceled_at, reward_quantity, cancel_confirm,
		zipcode,
		basic_address,
		detailed_address, extra_address ) VALUES ( #{userId}, #{rewardId},
		NOW(),
		#{canceledAt}, #{rewardQuantity}, #{cancelConfirm}, #{zipcode},
		#{basicAddress},
		#{detailedAddress}, #{extraAddress})
	</insert>

	<select id="findFundingByUserId"
		resultType="com.jam.repository.model.Funding"> SELECT
		f.funding_id,
		f.created_at,
		r.reward_point,
		r.reward_content,
		f.reward_quantity,
		CONCAT(f.basic_address, ' ', f.detailed_address, ' ', IFNULL(f.extra_address, '')) AS
		shippingAddress,
		f.cancel_confirm,
		f.canceled_at,
		r.project_id,
		p.date_end,
		-- 프로젝트 마감 여부 계산 (마감일이 현재보다 이전이면 'Y', 아니면 'N')
		CASE
		WHEN p.date_end &lt; CURDATE() THEN 'Y' -- 현재 날짜보다 이전이면 마감됨
		ELSE 'N' -- 아직 마감되지 않음
		END AS isClosed
		FROM
		funding_tb f
		JOIN reward_tb r ON f.reward_id = r.reward_id
		JOIN project_tb p ON r.project_id = p.project_id
		WHERE
		f.user_id = #{userId};
	</select>

	<update id="updatePoint">
		UPDATE user_de_tb
		SET point = point - #{totalAmount}
		WHERE user_id = #{userId}
	</update>
	
	<update id="updateCanceled">
		update funding_tb
		set cancel_confirm = 'Y'
		where funding_id = #{fundingId}
	</update>
	
	<update id="updatePointByRefund">
		UPDATE user_de_tb
		SET point = point + #{totalAmount}
		WHERE user_id = #{userId}
	</update> 

	<select id="findByProjectId" parameterType="int" resultType="com.jam.repository.model.Funding">
        SELECT * 
        FROM funding_tb 
        WHERE reward_id IN (
            SELECT reward_id FROM reward_tb WHERE project_id = #{projectId}
        )
    </select>

    <update id="updateFundingStatus" parameterType="com.jam.repository.model.Funding">
        UPDATE funding_tb
        SET 
            cancel_confirm = #{cancelConfirm}, 
            canceled_at = #{canceledAt}
        WHERE funding_id = #{fundingId}
    </update>

</mapper>