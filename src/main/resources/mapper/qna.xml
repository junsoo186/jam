<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.repository.interfaces.QnaRepository">
	
	<!--사용자 질문 쿼리 -->
	<!-- 추후 페이징 후 추가 예정 LIMIT #{limit} OFFSET #{offset};  -->
	<insert id="insertQ">
	INSERT INTO qna_tb (user_id,title,question_content,created_at) 
	VALUES(#{userId}, #{title}, #{questionContent}, now());
	</insert>
	<!--사용자가 본인 질문 수정  -->
	<update id="updateQ">
	UPDATE qna_tb SET title = #{title},
				question_content = #{questionContent}
                WHERE qna_id = #{qnaId};
	</update>
	<!--관리자 답변 쿼리  -->
	<!-- 사용자가 insert 한 질문에 update 하여 답변 하는 형태  -->
	<update id="updateA">
	UPDATE qna_tb SET staff_id = #{staffId},
				answer_content = #{answerContent}
                WHERE user_id = #{userId};
	</update>
	
	<!--전체 Q&A 조회  --> 
	<select id="selectAllQnaPage" resultType="com.jam.repository.model.Qna">
		SELECT 
			q.*, 
			u1.nick_name AS user_name,  -- 작성자의 이름
			u2.nick_name AS staff_name  -- 관리자의 이름 (답변한 경우)
		FROM 
			qna_tb AS q
		LEFT JOIN 
			user_tb AS u1 ON q.user_id = u1.user_id  -- 작성자 정보와 조인
		LEFT JOIN 
			user_tb AS u2 ON q.staff_id = u2.user_id -- 관리자의 정보와 조인 (LEFT JOIN)
		ORDER BY 
			q.qna_id DESC
		LIMIT 
			#{limit} OFFSET #{offset};
	</select>
	
	<!--qnaID 로 상세보기  -->
	<select id="selectQnaByQnaId" resultType="com.jam.repository.model.Qna">
		SELECT q.* , u.nick_name
		FROM qna_tb as q 
		LEFT JOIN user_tb as u on q.user_id = u.user_id
		WHERE q.qna_ID = #{qnaId}
	</select>
	
	<select id="countAll" resultType="int">
		SELECT count(*)
		FROM qna_tb as q 
		LEFT JOIN user_tb as u on q.user_id = u.user_id
	</select>
	<!--사용자 본인이 남긴 Q&A 전체 조회  --> 
	<select id="selectAllQnaByUserId" resultType="com.jam.dto.QnaDTO">
		SELECT q.* , u.nick_name
		FROM qna_tb as q 
		LEFT JOIN user_tb as u on q.user_id = u.user_id
		WHERE u.user_id = #{userId}
	
	</select>
	
	<!--사용자 본인이 남긴 Q&A 삭제  -->
	
	<delete id="deleteByQnaId">
		DELETE FROM qna_tb WHERE qna_id = #{qnaID}
	</delete>
	
	<select id="findQnaByQnaId" resultType="com.jam.repository.model.Qna">
		SELECT 
			q.qna_id,
			q.title,
			q.question_content,
			q.answer_content,
			q.created_at,
			q.answer_date,
			u1.nick_name AS user_name,   -- 작성자의 이름
			u2.nick_name AS staff_name   -- 관리자의 이름 (답변한 사람)
		FROM 
			qna_tb q
		JOIN 
			user_tb u1 ON q.user_id = u1.user_id   -- 작성자 정보와 조인
		LEFT JOIN 
			user_tb u2 ON q.staff_id = u2.user_id  -- 관리자의 정보와 조인 (답변자가 없을 수 있으므로 LEFT JOIN)
		where qna_id = #{qnaId}
	</select>

	<update id="updateQnaAnswer">
		update qna_tb
		set answer_content = #{answerContent},
		staff_id = #{staffId},
		answer_date = now()
		where qna_id = #{qnaId}
	</update>

	<update id="deleteQnaAnswer">
		update qna_tb
		set answer_content = null,
		staff_id = null,
		answer_date = now()
		where qna_id = #{qnaId}
	</update>

</mapper>