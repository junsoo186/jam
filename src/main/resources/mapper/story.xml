<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jam.repository.interfaces.StoryRepository">

	<insert id="insertStory">
		insert into story_tb (book_id, user_id, number, type,
		title, upload_day, save, cost, contents)
		values (#{bookId}, #{userId},
		#{number}, #{type}, #{title},
		#{uploadDay}, #{save},
		#{cost},
		#{contents})
	</insert>

	<select id="findAllStoryByBookIdPage"
		resultType="com.jam.repository.model.Story">
		select story_id, story.user_id, number, type, story.title,
		story.created_at, cost,
		story.views
		from story_tb as story
		join book_tb
		as book on story.book_id
		= book.book_id
		where book.book_id = #{bookId}
		ORDER BY number ASC
		LIMIT #{limit} OFFSET #{offset};
	</select>
	
	<select id="countStoriesByBookId"
		resultType="int">
		select count(*)
		FROM story_tb as s
		LEFT JOIN book_tb as b ON s.book_id = b.book_id
		where  b.book_id = #{bookId}
	</select>

	<select id="countAll" resultType="int">
		SELECT count(*)
		FROM story_tb as s
		LEFT JOIN book_tb as b ON s.book_id = b.book_id
	</select>






	<select id="findStoryNumberByBookId"
		resultType="com.jam.repository.model.Story">
		select number
		from story_tb as story
		join book_tb as book on
		story.book_id
		= book.book_id
		where book.book_id = #{bookId}
	</select>

	<select id="outputStoryContentByStoryId"
		resultType="com.jam.repository.model.Story">
		select story_id, book_id, title, contents, number
		from
		story_tb
		where story_id =
		#{storyId}
	</select>

	<update id="updateStory">
		update story_tb set
		title = #{title}, contents =
		#{contents},
		cost = #{cost},
		type = #{type}
		where story_id = #{storyId}
	</update>

	<update id="updateNumberByStoryId">
		update story_tb set
		number = #{number}
		where story_id =
		#{storyId}
	</update>

	<update id="storyViewCountUp">
		UPDATE story_tb
		SET view = view + 1
		WHERE story_id =
		#{storyId}
	</update>

	<delete id="deleteStory">
		delete story_tb where story_id = #{storyId}
	</delete>

	<select id="findStoryIdByBookIdAndUserId"
		resultType="com.jam.repository.model.Story">
		SELECT story_id
		FROM story_tb
		where book_id = #{bookId} and user_id = {user_id}
		ORDER BY story_id desc
		limit 1;
	</select>

</mapper>