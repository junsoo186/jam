server:
  port: 8080 # 서버가 사용할 포트 번호 설정 
  servlet:
    encoding:
      charset: utf-8 # 서블릿의 응답과 요청 인코딩을 UTF-8로 설정 
      force: true # 요청과 응답에 대해 이 인코딩을 강제로 사용하도록 설정합니다. 

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: joinandmakes@gmail.com
    password: tpbs dmlk iumy fyjk # !q@w3e4r 메일 비밀번호
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 300000  # 30 * 60 * 1000 == 05분

  mvc:
    view:
      prefix: /WEB-INF/view/ # JSP 파일이 위치한 디렉토리 접두사를 설정합니다.
      suffix: .jsp # 뷰 이름에 자동으로 추가될 파일 확장자를 설정합니다.

  servlet:
    content-type: text/html
    multipart:
      max-file-size: 20MB # 파일 최대 크기 20MB
      max-request-size: 20MB # 멀티파트 전체 요청 크기 20MB 제한

  datasource:
    url: jdbc:h2:mem:adpokerdb;MODE=MySQL  # 데이터베이스 연결을 위한 URL을 설정 합니다.
    driver-class-name: org.h2.Driver # 드라이버 클래스를 설정 합니다.
    username: sa # 사용자 ID를 지정
    password: '' # DB 비밀번호, 여기서는 빈 문자열로 설정

  sql:
    init:
      schema-locations:
        - classpath:db/table.sql  # 테이블 생성 SQL 파일 경로
      data-locations:
        - classpath:db/data.sql  # 초기 데이터 삽입 SQL 파일 경로

  h2:
    console:
      enabled: true  # H2 데이터베이스 콘솔을 활성화

  output:
    ansi:
      enabled: always  # 콘솔 출력에 ANSI 색상 코드를 사용할 수 있도록 설정

  cloud:
    gcp:
      project-id: jamcache  # Google Cloud 프로젝트 ID
      storage:
        bucket: jamcache-gcs  # Google Cloud Storage 버킷 이름

  data:
    redis:
      host: jamcache-amsh83.serverless.apn2.cache.amazonaws.com  # AWS ElastiCache Redis 엔드포인트
      port: 6379  # 기본 Redis 포트

mybatis:
  mapper-locations:
    - classpath:mapper/**/*.xml  # MyBatis 매퍼 파일 위치를 설정합니다.
  configuration:
    map-underscore-to-camel-case: true  # 데이터베이스의 언더스코어 네이밍을 카멜케이스로 매핑
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # SQL 로그 구현체

logging:
  level:
    org.apache.ibatis: DEBUG  # MyBatis 로깅 레벨을 DEBUG로 설정하여 SQL 쿼리 로그 출력

file:
  upload-dir: src/main/resources/static/images/  # 파일 업로드 디렉토리 설정

tenco:
  key: 54d5cb2d332dbdb4850293caae4559ce88b65163f1ea5d4e4b3ac49d772ded14  # API 키 설정
