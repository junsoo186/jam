server:
  port: 8080 #서버가 사용할 포트 번호 설정 
  servlet:
    encoding:
      charset: utf-8 #서블릿의 응답과 요청 인코딩을 UTF-8 로 설정 
      force: true # 요청과 응답에 대해 이 인코딩을 강제로 사용하도록 설정합니다. 
      
spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: alsgur6811@gmail.com
    password: rbse czix ygfa awvf
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30분
  mvc:
    view: 
      prefix: /WEB-INF/view/ #JSP파일이 위치한 디렉토리 접두사를 설정합니다.
      suffix: .jsp #뷰 이름에 자동으로 추가될 파일 확장자를 설정합니다.
  servlet:
    multipart:
      max-file-size: 20MB #파일 최대 크기 20MB
      max-request-size: 20MB #멀티파트 전체 요청 크기 20MB제한 
  datasource:
   url: jdbc:h2:mem:adpokerdb;MODE=MySQL  #데이터 베이스 연결을 위한 URL을 설정 합니다.
   driver-class-name: org.h2.Driver #드라이버 클래스를 설정 합니다.
   username: sa #사용자 ID를 지정
   password: '' #DB 비밀번호 여기서는 빈 문자열로 설정
  sql:
    init:
      schema-locations:
      - classpath:db/table.sql
      data-locations:
      - classpath:db/data.sql
  
  h2:
    console:
      enabled: true #H2 데이터 베이스 콘솔을 활성화 합니다.   
  
  output:
    ansi:
      enabled: always #콘솔 출력에 ANSI 색상 코드를 사용할 수 있도록 설정 
# 구글 이메일 인증 yml  
mail:
host: smtp.gmail.com
port: 587 # SMTP 서버의 포트 번호. Gmail SMTP 서버는 587 포트를 사용한다.
username: ekhvoed5555@gmail.com #  이메일을 보내는 용
password: gwsb hqqz akxv fdyj #  생성했던 앱 비밀번호 입력
properties:
  mail:
    smtp:
      auth: true
      starttls:
        enable: true
        required: true
      connectiontimeout: 5000 # 클라이언트가 SMTP 서버와의 연결을 설정하는 데 대기해야 하는 시간
      timeout: 5000 #  클라이언트가 SMTP 서버로부터 응답을 대기해야 하는 시간
      writetimeout: 5000 # 클라이언트가 작업을 완료하는데 대기해야 하는 시간
auth-code-expiration-millis: 1800000 # 30 * 60 * 1000 == 30분 (이메일 인증 코드의 만료 시간)
      
#mybatis 설정
mybatis:
  mapper-locations:
    - classpath:mapper/**/*.xml  #MyBatis 매퍼 파일 위치를 설정합니다. **은 모든 디렉토리, *.xml 은 모든 XML 파일을 의미합니다.
  configuration:
    map-underscore-to-camel-case: true #데이터베이스의 언더스코어 네이밍(column_name)을 카멜 케이스(columnName)로 자동 매핑합니다.
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #SQL 로깅 구현체를 설정합니다.        

logging:
  level:
    org.apache.ibatis: DEBUG #MyBatis 로깅 레벨을 DEBUG로 설정하여 실행되는 SQL 쿼리와 내부 로깅 정보를 콘솔에 출력합니다.

#초기 파라메터 설정
file:
  upload-dir: C:\work_spring\upload/
  
tenco:
  key: 54d5cb2d332dbdb4850293caae4559ce88b65163f1ea5d4e4b3ac49d772ded14 